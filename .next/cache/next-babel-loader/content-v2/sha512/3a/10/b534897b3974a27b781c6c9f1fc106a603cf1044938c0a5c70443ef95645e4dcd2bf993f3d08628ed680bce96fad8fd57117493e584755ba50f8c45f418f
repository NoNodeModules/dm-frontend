{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/ajay/web/projects/dm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ajay/web/projects/dm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ajay/web/projects/dm-frontend/src/components/auth/login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport GoogleSVG from \"./google.svg\";\nimport getConfig from \"next/config\";\nimport { useState } from \"react\";\nimport { testLogin, backendLogin } from \"./firebase.auth\";\nimport firebase from \"config/firebase.config\";\nimport { useAuth } from \"contexts/useAuth\";\n\nvar LoginModal = function LoginModal(_ref) {\n  _s();\n\n  var active = _ref.active,\n      hide = _ref.hide;\n\n  var _useState = useState(null),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      testId = _useState2[0],\n      setTestId = _useState2[1];\n\n  var _useAuth = useAuth(),\n      refreshAuthContext = _useAuth.refreshAuthContext;\n\n  var authenticateUser = function authenticateUser() {\n    setLoading(\"Authenticating\");\n    firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (result.user) {\n                  result.user.getIdToken().then(function (idToken) {\n                    backendLogin(idToken, result.user).then(function (response) {\n                      return refreshAuthContext();\n                    });\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var authenticateTestUser = function authenticateTestUser() {\n    setLoading(\"Authenticating Test User\");\n    testLogin().then(function (response) {\n      return refreshAuthContext();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"login-with-google\",\n        onClick: function onClick() {\n          return authenticateUser();\n        },\n        className: \"button-google\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button-icon\",\n          children: /*#__PURE__*/_jsxDEV(GoogleSVG, {\n            size: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this), \"Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, _this), process.env.NEXT_PUBLIC_TEST_LOGIN == \"true\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"test-login-user\",\n          value: testId,\n          onChange: function onChange(e) {\n            return setTestId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"test-login-submit\",\n          onClick: function onClick() {\n            return testLogin(testId).then(function (resp) {\n              refreshAuthContext();\n            })[\"catch\"](function (error) {\n              setLoading(\"Authentication Failed\");\n            });\n          },\n          children: \"Test Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginModal, \"SUaP74NA2YACAqEkjY2XHBFe0jA=\", false, function () {\n  return [useAuth];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/home/ajay/web/projects/dm-frontend/src/components/auth/login.js"],"names":["GoogleSVG","getConfig","useState","testLogin","backendLogin","firebase","useAuth","LoginModal","active","hide","loading","setLoading","testId","setTestId","refreshAuthContext","authenticateUser","auth","signInWithPopup","GoogleAuthProvider","then","result","user","getIdToken","idToken","response","authenticateTestUser","process","env","NEXT_PUBLIC_TEST_LOGIN","e","target","value","resp","error"],"mappings":"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","sourcesContent":["import GoogleSVG from \"./google.svg\";\nimport getConfig from \"next/config\";\nimport { useState } from \"react\";\nimport { testLogin, backendLogin } from \"./firebase.auth\";\nimport firebase from \"config/firebase.config\";\nimport { useAuth } from \"contexts/useAuth\";\n\nconst LoginModal = ({ active, hide }) => {\n  const [loading, setLoading] = useState(null);\n  const [testId, setTestId] = useState(\"\");\n  const { refreshAuthContext } = useAuth();\n  const authenticateUser = () => {\n    setLoading(\"Authenticating\");\n    firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then(async (result) => {\n        if (result.user) {\n          result.user.getIdToken().then((idToken) => {\n            backendLogin(idToken, result.user).then((response) =>\n              refreshAuthContext()\n            );\n          });\n        }\n      });\n  };\n\n  const authenticateTestUser = () => {\n    setLoading(\"Authenticating Test User\");\n    testLogin().then((response) => refreshAuthContext());\n  };\n\n  return (\n    <div>\n      {!loading ? (\n        <>\n          <button\n            data-testid=\"login-with-google\"\n            onClick={() => authenticateUser()}\n            className=\"button-google\"\n          >\n            <span className=\"button-icon\">\n              <GoogleSVG size=\"30px\" />\n            </span>\n            Sign in with Google\n          </button>\n          {process.env.NEXT_PUBLIC_TEST_LOGIN == \"true\" && (\n            <div className=\"test-login-container\">\n              <input\n                data-testid=\"test-login-user\"\n                value={testId}\n                onChange={(e) => setTestId(e.target.value)}\n              />\n              <button\n                data-testid=\"test-login-submit\"\n                onClick={() =>\n                  testLogin(testId)\n                    .then((resp) => {\n                      refreshAuthContext();\n                    })\n                    .catch((error) => {\n                      setLoading(\"Authentication Failed\");\n                    })\n                }\n              >\n                Test Login\n              </button>\n            </div>\n          )}\n        </>\n      ) : (\n        <div>{loading}</div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}