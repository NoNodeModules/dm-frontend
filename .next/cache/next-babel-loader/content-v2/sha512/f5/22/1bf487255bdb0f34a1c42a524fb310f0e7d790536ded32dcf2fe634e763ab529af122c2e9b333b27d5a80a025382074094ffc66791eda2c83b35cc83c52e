{"ast":null,"code":"import axios from \"axios\";\nimport firebase from \"config/firebase.config\";\nexport const backendLogin = async (idToken, user) => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + \"/session/login\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + idToken\n    },\n    data: {\n      provider: \"GOOGLE\"\n    },\n    withCredentials: true\n  }).then(res => {\n    return Promise.resolve({\n      success: true,\n      user\n    });\n  }).catch(error => {\n    return Promise.reject(error);\n  });\n};\nexport const testLogin = async testId => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + `/test/login/${testId}`,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    return firebase.auth().signInWithCustomToken(res.data).then(async resp => {\n      return await resp.user.getIdToken().then(idToken => {\n        return Promise.resolve(backendLogin(idToken));\n      });\n    }).catch(function (error) {\n      return Promise.reject(false);\n    });\n  }).catch(error => {\n    return Promise.reject(false);\n  });\n};","map":{"version":3,"sources":["/home/ajay/web/projects/dm-frontend/src/components/auth/firebase.auth.js"],"names":["axios","firebase","backendLogin","idToken","user","url","process","env","NEXT_PUBLIC_MIDDLEWARE_URL","method","headers","Authorization","data","provider","withCredentials","then","res","Promise","resolve","success","catch","error","reject","testLogin","testId","auth","signInWithCustomToken","resp","getIdToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AACnD,SAAOJ,KAAK,CAAC;AACXK,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,GAAyC,gBADnC;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYR;AAFpB,KAHE;AAOXS,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAPK;AAQXC,IAAAA,eAAe,EAAE;AARN,GAAD,CAAL,CAUJC,IAVI,CAUEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgB;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBf,MAAAA;AAAjB,KAAhB,CAAP;AACD,GAZI,EAaJgB,KAbI,CAaGC,KAAD,IAAW;AAChB,WAAOJ,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAP;AACD,GAfI,CAAP;AAgBD,CAjBM;AAmBP,OAAO,MAAME,SAAS,GAAG,MAAOC,MAAP,IAAkB;AACzC,SAAOxB,KAAK,CAAC;AACXK,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,GAA0C,eAAcgB,MAAO,EADzD;AAEXf,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAD,CAAL,CAOJK,IAPI,CAOEC,GAAD,IAAS;AACb,WAAOf,QAAQ,CACZwB,IADI,GAEJC,qBAFI,CAEkBV,GAAG,CAACJ,IAFtB,EAGJG,IAHI,CAGC,MAAOY,IAAP,IAAgB;AACpB,aAAO,MAAMA,IAAI,CAACvB,IAAL,CAAUwB,UAAV,GAAuBb,IAAvB,CAA6BZ,OAAD,IAAa;AACpD,eAAOc,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACC,OAAD,CAA5B,CAAP;AACD,OAFY,CAAb;AAGD,KAPI,EAQJiB,KARI,CAQE,UAAUC,KAAV,EAAiB;AACtB,aAAOJ,OAAO,CAACK,MAAR,CAAe,KAAf,CAAP;AACD,KAVI,CAAP;AAWD,GAnBI,EAoBJF,KApBI,CAoBGC,KAAD,IAAW;AAChB,WAAOJ,OAAO,CAACK,MAAR,CAAe,KAAf,CAAP;AACD,GAtBI,CAAP;AAuBD,CAxBM","sourcesContent":["import axios from \"axios\";\nimport firebase from \"config/firebase.config\";\n\nexport const backendLogin = async (idToken, user) => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + \"/session/login\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + idToken,\n    },\n    data: { provider: \"GOOGLE\" },\n    withCredentials: true,\n  })\n    .then((res) => {\n      return Promise.resolve({ success: true, user });\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nexport const testLogin = async (testId) => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + `/test/login/${testId}`,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((res) => {\n      return firebase\n        .auth()\n        .signInWithCustomToken(res.data)\n        .then(async (resp) => {\n          return await resp.user.getIdToken().then((idToken) => {\n            return Promise.resolve(backendLogin(idToken));\n          });\n        })\n        .catch(function (error) {\n          return Promise.reject(false);\n        });\n    })\n    .catch((error) => {\n      return Promise.reject(false);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}