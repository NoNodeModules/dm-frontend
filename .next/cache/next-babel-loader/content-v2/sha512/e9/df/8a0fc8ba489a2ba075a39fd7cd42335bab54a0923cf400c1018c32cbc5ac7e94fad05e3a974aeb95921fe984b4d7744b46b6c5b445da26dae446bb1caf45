{"ast":null,"code":"import _regeneratorRuntime from \"/home/ajay/web/projects/dm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ajay/web/projects/dm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport firebase from \"config/firebase.config\";\nexport var backendLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(idToken, user) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", axios({\n              url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + \"/session/login\",\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + idToken\n              },\n              data: {\n                provider: \"GOOGLE\"\n              },\n              withCredentials: true\n            }).then(function (res) {\n              return Promise.resolve({\n                success: true,\n                user: user\n              });\n            })[\"catch\"](function (error) {\n              return Promise.reject(error);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function backendLogin(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var testLogin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(testId) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", axios({\n              url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + \"/test/login/\".concat(testId),\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (res) {\n              return firebase.auth().signInWithCustomToken(res.data).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resp) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return resp.user.getIdToken().then(function (idToken) {\n                            return Promise.resolve(backendLogin(idToken));\n                          });\n\n                        case 2:\n                          return _context2.abrupt(\"return\", _context2.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x4) {\n                  return _ref3.apply(this, arguments);\n                };\n              }())[\"catch\"](function (error) {\n                return Promise.reject(false);\n              });\n            })[\"catch\"](function (error) {\n              return Promise.reject(false);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function testLogin(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/ajay/web/projects/dm-frontend/src/components/auth/firebase.auth.js"],"names":["axios","firebase","backendLogin","idToken","user","url","process","env","NEXT_PUBLIC_MIDDLEWARE_URL","method","headers","Authorization","data","provider","withCredentials","then","res","Promise","resolve","success","error","reject","testLogin","testId","auth","signInWithCustomToken","resp","getIdToken"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,OAAP,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,6CACnBJ,KAAK,CAAC;AACXK,cAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,GAAyC,gBADnC;AAEXC,cAAAA,MAAM,EAAE,MAFG;AAGXC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,aAAa,EAAE,YAAYR;AAFpB,eAHE;AAOXS,cAAAA,IAAI,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAPK;AAQXC,cAAAA,eAAe,EAAE;AARN,aAAD,CAAL,CAUJC,IAVI,CAUC,UAACC,GAAD,EAAS;AACb,qBAAOC,OAAO,CAACC,OAAR,CAAgB;AAAEC,gBAAAA,OAAO,EAAE,IAAX;AAAiBf,gBAAAA,IAAI,EAAJA;AAAjB,eAAhB,CAAP;AACD,aAZI,WAaE,UAACgB,KAAD,EAAW;AAChB,qBAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,aAfI,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZlB,YAAY;AAAA;AAAA;AAAA,GAAlB;AAmBP,OAAO,IAAMoB,SAAS;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8CAChBvB,KAAK,CAAC;AACXK,cAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BAAZ,yBAAwDe,MAAxD,CADM;AAEXd,cAAAA,MAAM,EAAE,MAFG;AAGXC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAHE,aAAD,CAAL,CAOJK,IAPI,CAOC,UAACC,GAAD,EAAS;AACb,qBAAOf,QAAQ,CACZuB,IADI,GAEJC,qBAFI,CAEkBT,GAAG,CAACJ,IAFtB,EAGJG,IAHI;AAAA,qFAGC,kBAAOW,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACSA,IAAI,CAACtB,IAAL,CAAUuB,UAAV,GAAuBZ,IAAvB,CAA4B,UAACZ,OAAD,EAAa;AACpD,mCAAOc,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACC,OAAD,CAA5B,CAAP;AACD,2BAFY,CADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHD;;AAAA;AAAA;AAAA;AAAA,4BAQE,UAAUiB,KAAV,EAAiB;AACtB,uBAAOH,OAAO,CAACI,MAAR,CAAe,KAAf,CAAP;AACD,eAVI,CAAP;AAWD,aAnBI,WAoBE,UAACD,KAAD,EAAW;AAChB,qBAAOH,OAAO,CAACI,MAAR,CAAe,KAAf,CAAP;AACD,aAtBI,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATC,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import axios from \"axios\";\nimport firebase from \"config/firebase.config\";\n\nexport const backendLogin = async (idToken, user) => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + \"/session/login\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + idToken,\n    },\n    data: { provider: \"GOOGLE\" },\n    withCredentials: true,\n  })\n    .then((res) => {\n      return Promise.resolve({ success: true, user });\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nexport const testLogin = async (testId) => {\n  return axios({\n    url: process.env.NEXT_PUBLIC_MIDDLEWARE_URL + `/test/login/${testId}`,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((res) => {\n      return firebase\n        .auth()\n        .signInWithCustomToken(res.data)\n        .then(async (resp) => {\n          return await resp.user.getIdToken().then((idToken) => {\n            return Promise.resolve(backendLogin(idToken));\n          });\n        })\n        .catch(function (error) {\n          return Promise.reject(false);\n        });\n    })\n    .catch((error) => {\n      return Promise.reject(false);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}